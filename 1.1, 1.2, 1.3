#include <iostream>
#include <stdio.h>


// Функция для сброса определенного бита в 0
unsigned char сброситьБит(unsigned char x, int позицияБита) {
    // Создаем маску, в которой только нужный бит установлен в 1, остальные - 0
    unsigned char маска = 1 << позицияБита;
    // Применяем операцию И с инвертированной маской, чтобы сбросить бит в 0
    return x & (~маска);
}

// Функция для установки определенного бита в 1
unsigned char установитьБит(unsigned char x, int позицияБита) {
    // Создаем маску, в которой только нужный бит установлен в 1, остальные - 0
    unsigned char маска = 1 << позицияБита;
    // Применяем операцию ИЛИ с маской, чтобы установить бит в 1
    return x | маска;
}

int main() {
    setlocale(LC_ALL, "Russian");
    // Исходное значение (8-разрядное двоичное число 11111111)
    unsigned char x = 255;

    // Задача 1a: Сброс 5-го бита в 0
    x = сброситьБит(x, 4);

    std::cout << "Результат (сброс 5-го бита): x = " << static_cast<int>(x) << std::endl;

    // Задача 1b: Установка 7-го бита в 1
    x = установитьБит(x, 6);

    std::cout << "Результат (установка 7-го бита): x = " << static_cast<int>(x) << std::endl;

    // Задача 1c: Дополнительные битовые операции (сброс 4-го бита и установка 2-го бита)
    x = сброситьБит(x, 3); // Сброс 4-го бита в 0
    x = установитьБит(x, 1);   // Установка 2-го бита в 1

    std::cout << "Дополнительный результат (сброс 4-го бита и установка 2-го бита): x = " << static_cast<int>(x) << std::endl;

    return 0;
}
